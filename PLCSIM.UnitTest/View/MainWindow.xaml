<Window x:Class="PLCSIM.UnitTest.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PLCSIM.UnitTest.View" 
        xmlns:viewmodel="clr-namespace:PLCSIM.UnitTest.ViewModel" 
        d:DataContext="{d:DesignInstance Type=viewmodel:MainWindowViewModel}"
        mc:Ignorable="d"
        Title="PLCSIM UnitTest" Height="450" Width="800" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" MinWidth="600" MinHeight="300">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="130"/>
            <RowDefinition Height="40
                           " />
            <RowDefinition Height="295*" MinHeight="100"/>
        </Grid.RowDefinitions>
        <Menu x:Name="MainMenu" Grid.Row="0" Height="25" VerticalAlignment="Top" BorderThickness="0.5" Background="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" ClipToBounds="True" Margin="0,0,0.333,0">
            <MenuItem x:Name="FileMenuItem" Header="File">
                <MenuItem x:Name="ConnectMenuItem" Header="Connect" Command="{Binding ConnectToPlcSimCommand}" IsEnabled="{Binding IsPlcSimDisconnected}"/>
                <MenuItem x:Name="DisconnectMenuItem" Header="Disconnect" Command="{Binding DisconnectFromPlcSimCommand}" IsEnabled="{Binding IsPlcSimConnected}"/>
                <Separator/>
                <MenuItem x:Name="ExitMenuItem" Header="Exit" Command="{Binding ExitCommand}"/>
            </MenuItem>
            <MenuItem x:Name="AboutMenuItem" Header="?" Command="{Binding AboutWindowCommand}"/>
        </Menu>

        <Rectangle x:Name="StatusRectangle" Margin="0" Grid.Row="1" Stroke="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">

        </Rectangle>

        <Label Content="Logic PLC" HorizontalAlignment="Left" Margin="10,7.667,0,0" Grid.Row="1" VerticalAlignment="Top" RenderTransformOrigin="0.202,0.154" Height="23" VerticalContentAlignment="Center" Padding="0" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <TextBox x:Name="LogicPlcTextBox" Text="{Binding LogicPlcName, Mode=OneWay}" HorizontalAlignment="Left" Height="23" Margin="141,7.667,0,0" Grid.Row="1" TextWrapping="Wrap" VerticalAlignment="Top" Width="187" VerticalContentAlignment="Center" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" MaxLines="1"/>
        <Label Content="Available" HorizontalAlignment="Left" Margin="384,7.667,0,0" Grid.Row="1" VerticalAlignment="Top" RenderTransformOrigin="0.202,0.154" Height="23" VerticalContentAlignment="Center" Padding="0" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Rectangle x:Name="LogicPlcAvailableRectangle" HorizontalAlignment="Left" Height="14" Margin="366,12.667,0,0" Grid.Row="1" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" VerticalAlignment="Top" Width="13" RenderTransformOrigin="-0.692,2.19">
            <Rectangle.Style>
                <Style TargetType="Rectangle">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLogicPlcAvailable}" Value="False">
                            <Setter Property="Fill" Value="Transparent"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsLogicPlcAvailable}" Value="True">
                            <Setter Property="Fill" Value="Lime"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Rectangle.Style>
        </Rectangle>
        <Label Content="Running" HorizontalAlignment="Left" Margin="487,7.667,0,0" Grid.Row="1" VerticalAlignment="Top" RenderTransformOrigin="0.202,0.154" Height="23" VerticalContentAlignment="Center" Padding="0" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Rectangle x:Name="LogicPlcRunningRectangle" HorizontalAlignment="Left" Height="14" Margin="469,12.667,0,0" Grid.Row="1" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" VerticalAlignment="Top" Width="13" RenderTransformOrigin="-0.692,2.19">
            <Rectangle.Style>
                <Style TargetType="Rectangle">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLogicPlcRunning}" Value="False">
                            <Setter Property="Fill" Value="Yellow"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsLogicPlcRunning}" Value="True">
                            <Setter Property="Fill" Value="Lime"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Rectangle.Style>
        </Rectangle>
        <Button x:Name="StartPlcButton" Content="Start"  Command="{Binding StartLogicPlcCommand}" IsEnabled="{Binding CanStartLogicPlc}" HorizontalAlignment="Left" Margin="560,8.667,0,0" Grid.Row="1" VerticalAlignment="Top" Width="75"/>
        <Button x:Name="StopPlcButton" Content="Stop" Command="{Binding StopLogicPlcCommand}" IsEnabled="{Binding CanStopLogicPlc}" HorizontalAlignment="Left" Margin="660,8.667,0,0" Grid.Row="1" VerticalAlignment="Top" Width="75"/>

        <Button x:Name="StartCommunicationButton" Content="Start Communication"  Command="{Binding StartCommunicationCommand}" IsEnabled="{Binding CanStartCommunication}" HorizontalAlignment="Left" Margin="9,51.667,0,0" Grid.Row="1" VerticalAlignment="Top" Width="150">
            <Button.Style>
                <Style TargetType="Button">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsCommunicating}" Value="False">
                            <Setter Property="Background" Value="Transparent"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsCommunicating}" Value="True">
                            <Setter Property="Background" Value="Lime"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="StopCommunicationButton" Content="Stop Communication" Command="{Binding StopCommunicationCommand}" IsEnabled="{Binding CanStopCommunication}" HorizontalAlignment="Left" Margin="176,51.667,0,0" Grid.Row="1" VerticalAlignment="Top" Width="150">
            <Button.Style>
                <Style TargetType="Button">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsCommunicating}" Value="False">
                            <Setter Property="Background" Value="Yellow"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsCommunicating}" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Label Content="Sync Time Interval" HorizontalAlignment="Left" Margin="359,50.667,0,0" Grid.Row="1" VerticalAlignment="Top" RenderTransformOrigin="0.202,0.154" Height="23" VerticalContentAlignment="Center" Padding="0" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <TextBox x:Name="SyncTimeIntervalTextBox" Text="{Binding SyncInterval}" HorizontalAlignment="Left" Height="23" Margin="460,51.667,0,0" Grid.Row="1" TextWrapping="Wrap" VerticalAlignment="Top" Width="72" VerticalContentAlignment="Center" MaxLines="1" HorizontalContentAlignment="Right"/>
        <Label Content="ms" HorizontalAlignment="Left" Margin="536,50.667,0,0" Grid.Row="1" VerticalAlignment="Top" RenderTransformOrigin="0.202,0.154" Height="23" VerticalContentAlignment="Center" Padding="0" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Label Content="Test Results" HorizontalAlignment="Left" Margin="10,86.667,0,0" Grid.Row="1" VerticalAlignment="Top" RenderTransformOrigin="0.202,0.154" Height="23" VerticalContentAlignment="Center" Padding="0" Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <TextBox x:Name="TestResultsFileTextBox" Text="{Binding TestResultFile, Mode=OneWay}" HorizontalAlignment="Left" Height="23" Margin="141,87.667,0,0" Grid.Row="1" TextWrapping="Wrap" VerticalAlignment="Top" Width="514" VerticalContentAlignment="Center" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" MaxLines="1"/>
        <Button x:Name="OpenTestResultsButton" Content="Open" Command="{Binding OpenTestResultsCommand}" Grid.Row="1" HorizontalAlignment="Left" Margin="660,88.667,0,0" VerticalAlignment="Top" Width="75" />

        <Rectangle x:Name="LogSettingsRectangle" Margin="0" Grid.Row="2" />
        <Button x:Name="ClearLogsButton" Content="Clear Logs" Command="{Binding ClearLogsCommand}" Grid.Row="2" HorizontalAlignment="Right" Margin="0,10.667,58.333,0" VerticalAlignment="Top" Width="75" />
        <ComboBox x:Name="LogDetailComboBox"  Grid.Row="2" HorizontalAlignment="Left" Margin="515,9.667,0,0" VerticalAlignment="Top" Width="120" ItemsSource="{Binding LogLevels}" SelectedItem="{Binding SelectedLogLevel}"/>

        <local:LogView x:Name="LoggingTextBox" Grid.Row="3" />

    </Grid>
</Window>
